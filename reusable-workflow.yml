name: SmallAmpCI
  
on:
  workflow_call:
    inputs:
      reponame: # sometimes for the debugging we may use different name.
        description: 'The name of the repository'
        required: false
        type: string
        default: ${{github.event.repository.name}}
      iteration: 
        description: 'The iteration in the main algorithm'
        required: false
        type: string
        default: 3
      SMALLAMP_NOPUSH:
        description: 'if the value is NOPUSH, sending PR will be disabled.'
        required: false
        type: string
        default: 'PUSH'
      SMALLAMP_MaxCrash:
        description: 'After X times of crash in a repo, we will skip the class'
        required: false
        type: string
        default: 10        
      SMALLAMP_DashboardJson:
        description: 'set to CREATE if you like to create a json output for web interface'
        required: false
        type: string
        default: 'NOCREATE'  
      SMALLAMP_freezeTimeOut:
        description: 'freezing threshold: lack of heartbeat for X sec means a freeze'
        required: false
        type: string
        default: 240
      SmallAmp_ShredSeed:
        description: 'The shuffle seed used for shredding'
        required: false
        type: string
        default: ${{ github.run_id}}        
      testClasses:
        description: 'TestClasses to amplify (comma separated) empty-> all'
        required: false
        type: string
        default: ''
      mode:
        description: 'mode (dspot, dspotFast, dspotFastRank)'
        required: false
        type: string        
        default: 'dspotFastRank'
      parallel_jobs:         
        description: 'Max number of all parallel jobs (0 use Input testClasses length)'
        required: true
        type: string        
        default: '12'
      maxInputs:
        description: 'Number of test variant per original test'
        required: false
        type: string        
        default: '30'
      shreds:
        description: 'Maximum number of methods per test class (0 means no shreding)'
        required: false
        type: string        
        default: '15'
      timeBudget:
        description: 'Number of minutes as time budget per test class (0 means no limit)'
        required: false
        type: string        
        default: '15'
      input_project_baseline: 
        description: 'The baseline of the project. extract it from .smalltalk.ston'
        required: true
        type: string        
        default: 'TODO'
      input_project_directory:
        description: 'The source directory of the project. extract it from .smalltalk.ston'
        required: true
        type: string        
        default: 'src'
      input_project_load:
        description: 'The load value of the project. extract it from .smalltalk.ston'
        required: false
        type: string        
        default: ''
      DASHBOARD_api_key:
        description: 'APIKey for dashboard.'
        required: false
        type: string        
        default: ''
      SMALLAMP_CrashLoopVerbose:
        description: 'Crash detection loop verbose'
        required: false
        type: string        
        default: 'False'
      new_branch_prefix:
        description: 'The name of the new branch in pull-requests'
        required: false
        type: string        
        default: 'SmallAmp'
#      SmallAmp_CommitFrom:
#        description: 'The commit id, amplify all changes from this commit'
#        required: false
#        type: string        
#        default: ''
    secrets:
      secret_github_token:
        required: true

jobs:
  MatrixBuild:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.result }}
      reponame: ${{ steps.set-reponame.outputs.reponame }}
    steps:
      - name: configurations 
        run: | 
          echo "testClasses -> ${{inputs.testClasses}}"
          echo "mode -> ${{inputs.mode}}"
          echo "parallel_jobs -> ${{inputs.parallel_jobs}}"
          echo "maxInputs -> ${{inputs.maxInputs}}"
          echo "timeBudget -> ${{inputs.timeBudget}}"          
      - id: set-matrix
        uses: actions/github-script@v4
        env:
          testClasses: ${{ inputs.testClasses }}
          parallel_jobs: ${{ inputs.parallel_jobs }}
        with:
          script: |
            l = parseInt(process.env.parallel_jobs)
            if(l==0){
              if(process.env.testClasses){
                if (process.env.testClasses.split(',').length < l )
                  l = process.env.testClasses.split(',').length
              }
            }
            a = Array.from({length: l}, (x, i) => {a:i});
            var o = {jobs: a};
            return o
      - id: set-reponame
        if: ${{ env.reponame == '' }}
        run: |
          echo "reponame is empty. Extracting from GITHUB_REPOSITORY."
          echo "::set-output name=reponame::${GITHUB_REPOSITORY#*/}"
          
  TestAmplification: 
    needs: MatrixBuild
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJSON(needs.MatrixBuild.outputs.matrix)}}
#        portion: [1 , 2, 3, 4, 5, 6, 7, 8] # Change me if you like to run in parallel. The content of array is not important, just the length
    name: Job number ${{ strategy.job-index }}
    env:
      project_baseline: ${{ inputs.input_project_baseline }}
      project_directory: ${{ inputs.input_project_directory }}
      project_load: ${{ inputs.input_project_load }}
      reponame: ${{ needs.MatrixBuild.outputs.reponame }}
      iteration: ${{ inputs.iteration }}
      SMALLAMP_NOPUSH: ${{ inputs.SMALLAMP_NOPUSH }}
      SMALLAMP_MaxCrash: ${{ inputs.SMALLAMP_MaxCrash }}
      SMALLAMP_freezeTimeOut: ${{ inputs.SMALLAMP_freezeTimeOut }}
      SmallAmp_ShredSeed: ${{ inputs.SmallAmp_ShredSeed }}
    steps:
      - uses: actions/checkout@v2
        with:
           fetch-depth: 0
      - uses: mabdi/smallamp-action@main
        with:
          action: setup
      - uses: mabdi/smallamp-action@main
        with:
          action: amplify
        env:
          SMALLAMP_PORTION: ${{ strategy.job-index }} 
          SmallAmp_CommitFrom: ${{ github.event.before }}
          SMALLAMP_ALLJOBS: ${{ strategy.job-total }}
          SMALLAMP_iteration: ${{ env.iteration }}
          SMALLAMP_maxInputs: ${{ inputs.maxInputs }}
          SMALLAMP_SHREDS: ${{ inputs.shreds }}
          SMALLAMP_mode: ${{ inputs.mode }}  
          SMALLAMP_timeBudget: ${{ inputs.timeBudget }}
          SMALLAMP_testClasses: ${{ inputs.testClasses }}
          SMALLAMP_CrashLoopVerbose: ${{ inputs.SMALLAMP_CrashLoopVerbose }}

  TestAmplificationPush:
    runs-on: ubuntu-latest
    needs: [TestAmplification, MatrixBuild] 
    env:
      project_baseline: ${{ inputs.input_project_baseline }}
      project_directory: ${{ inputs.input_project_directory }}
      project_load: ${{ inputs.input_project_load }}      
      reponame: ${{ needs.MatrixBuild.outputs.reponame }}
      iteration: ${{ inputs.iteration }}
      SMALLAMP_NOPUSH: ${{ inputs.SMALLAMP_NOPUSH }}
      SMALLAMP_MaxCrash: ${{ inputs.SMALLAMP_MaxCrash }}
      SMALLAMP_freezeTimeOut: ${{ inputs.SMALLAMP_freezeTimeOut }}
      SmallAmp_ShredSeed: ${{ inputs.SmallAmp_ShredSeed }}
      SMALLAMP_DashboardJson: ${{ inputs.SMALLAMP_DashboardJson }}
      DASHBOARD_api_key: ${{ inputs.DASHBOARD_api_key }}
    steps:
      - uses: actions/checkout@v2
        with:
           fetch-depth: 0
      - uses: mabdi/smallamp-action@main
        with:
          action: setup
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: ${{ env.PHARO_HOME }}
      - uses: mabdi/smallamp-action@main
        with:
          action: push
          github-token: ${{secrets.secret_github_token}}
        env:
          SMALLAMP_NEWBRANCH: ${{ inputs.new_branch_prefix }}
          iteration: ${{ env.iteration }}
          maxInputs: ${{ inputs.maxInputs }}
          shreds: ${{ inputs.shreds }}
          mode: ${{ inputs.mode }}  
          timeBudget: ${{ inputs.timeBudget }}
          testClasses: ${{ inputs.testClasses }}
          parallel_jobs: ${{ inputs.parallel_jobs }}
